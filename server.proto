syntax = "proto3";

option go_package = "../pb";

//protoc --go_out=./pb --go-grpc_out=./pb server.proto
package notification;
// 定义订阅请求消息

// 定义通知服务
service NotificationService {
  // 订阅更新，服务器端流式 RPC
  rpc Subscribe (SubscriptionRequest) returns (stream Notification);
}
message SubscriptionRequest {
  string client_id = 1; // 客户端标识符，用于区分不同客户端
}
// 定义通知消息
message Notification {
  string message = 1; // 通知内容
}

message PublishRequest {
  string client_id = 1;
  string message = 2;
}

message PublishResponse {
  bool success = 1;
}




// 定义服务
service Service {
  rpc Login (LoginRequest) returns (LoginReply);
  rpc Register (RegisterRequest) returns (RegisterReply);
  rpc GetUserInfo (GetUserInfoRequest) returns (GetUserInfoReply);
  rpc ModUserInfo (ModUserInfoRequest) returns (ModUserInfoReply);

  //修改单/任务
  rpc GetTaskListAll (GetTaskListAllRequest) returns (GetTaskListAllReply);
  rpc GetTaskListOne (GetTaskListOneRequest) returns (GetTaskListOneReply);
  rpc ImportXLSToTaskTable (ImportToTaskListRequest) returns (ImportToTaskListReply);
  //CURD
  rpc DelTask (DelTaskRequest) returns (DelTaskReply);
  rpc ModTask (ModTaskRequest) returns (ModTaskReply);
  rpc AddTask (AddTaskRequest) returns (AddTaskReply);
  rpc QueryTaskWithSQL (QueryTaskWithSQLRequest) returns (QueryTaskWithSQLReply);
  rpc QueryTaskWithField (QueryTaskWithFieldRequest) returns (QueryTaskWithFieldReply);



  //补丁
  rpc GetPatchsAll (GetPatchsAllRequest) returns (GetPatchsAllReply);
  rpc GetOnePatchs (GetOnePatchsRequest) returns (GetOnePatchsReply);
  rpc GetPatchsByState (GetPatchsByStateRequest) returns (GetPatchsByStateReply);
  rpc DelPatch (DelPatchRequest) returns (DelPatchReply);
  rpc ImportXLSToPatchTable (ImportXLSToPatchRequest) returns (ImportXLSToPatchReply);
  rpc ModPatch (ModPatchRequest) returns (ModPatchReply);

}

message LoginRequest {
  string name = 1;
  string password = 2;
}

message LoginReply {
}

message GetTaskListAllRequest {}

message task {
  string comment = 1;
  string taskId = 2;
  int32 emergencyLevel = 3;
  string deadline = 4;
  string principal = 5;
  string reqNo = 6;
  int64 estimatedWorkHours = 7;
  string state = 8;
  int32 typeId = 9;

}

message GetTaskListAllReply {
  repeated task tasks = 1;
}


message GetTaskListOneRequest {
  string name = 1;
}

message GetTaskListOneReply {
  repeated task tasks = 1;
}


message ImportToTaskListRequest {
  repeated task tasks = 1;
  string user = 2;
}

message ImportToTaskListReply {
  int32 insertCnt = 1;
}


message patch {
  string patchNo = 1;
  string reqNo = 2;
  string describe = 3;
  string clientName = 4;
  string deadline = 5;
  string reason = 6;
  string sponsor = 7;
  string state = 8;
}

message ImportXLSToPatchRequest {
    repeated patch patchs = 1;
    string user = 2;
}

message ImportXLSToPatchReply {
}

message GetPatchsAllRequest {}

message GetPatchsAllReply {
  repeated patch patchs  = 1;
}



message DelPatchRequest {
  string patchNo = 1;
  string user = 2;
}
message  DelPatchReply {}

message DelTaskRequest {
  string taskNo = 1;
  string user = 2;
  string principal = 3;
}
message DelTaskReply {}

message ModTaskRequest {
  task t = 1;
  string user = 2;
}

message ModTaskReply {
}

message AddTaskRequest {
  task t = 1;
  string user = 2;
}

message AddTaskReply {
}

message QueryTaskWithSQLRequest {
  string sql = 1;
}
message QueryTaskWithSQLReply {
  repeated task tasks = 1;
}

message QueryTaskWithFieldRequest {
  string field  = 1;
  string fieldValue = 2;
}

message QueryTaskWithFieldReply {
  repeated task tasks = 1;
}

message GetOnePatchsRequest {
  string patchNo = 1;
}
message GetOnePatchsReply {
  patch p = 1;
}
message GetPatchsByStateRequest {
  string state = 1;
}
message  GetPatchsByStateReply {
  repeated patch ps = 1;
}


message ModPatchRequest {
  patch p = 1;
  string user = 2;
}
message ModPatchReply {

}

message User {
  string name = 1;
  int64 JobNum = 2;
  string password = 3;
  string email = 4;
}

message RegisterRequest {
  User user = 1;
}

message RegisterReply {
}

message GetUserInfoRequest {
  string userName = 1;
}
message GetUserInfoReply {
  int32 jobNO = 1;
  string email = 2;
  int32 group = 3;
  int32 roleNo = 4;
}
message ModUserInfoRequest {
  bool modPass = 1;
  string pass = 2;
  string email = 3;
  int32 group = 4;
  int32 roleNo = 5;
  string name =  6;
}
message ModUserInfoReply{
}